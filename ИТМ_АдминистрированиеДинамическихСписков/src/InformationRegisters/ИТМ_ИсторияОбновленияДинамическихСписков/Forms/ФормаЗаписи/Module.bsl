// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    Настройки    = НастройкиИзЗаписи();
	Если НЕ ТипЗнч(Настройки) = Тип("НастройкиКомпоновкиДанных") Тогда
		Возврат;
	КонецЕсли;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	НастройкиXML = ОбщегоНазначения.ЗначениеВСтрокуXML(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКомпоновщикНастроекНастройкиОтбор

// Компоновщик настроек настройки отбор выбор.
// 
// Параметры:
//  Элемент - ТаблицаФормы - Элемент
//  ВыбраннаяСтрока - Число - Выбранная строка
//  Поле - ПолеФормы - Поле
//  СтандартнаяОбработка - Булево - Стандартная обработка
&НаКлиенте
Процедура КомпоновщикНастроекНастройкиОтборВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначениеВыбраннойЯчейки(Элемент, ВыбраннаяСтрока, Поле);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКомпоновщикНастроекНастройкиПараметрыДанных

// Компоновщик настроек настройки параметры данных выбор.
// 
// Параметры:
//  Элемент - ТаблицаФормы - Элемент
//  ВыбраннаяСтрока - Число - Выбранная строка
//  Поле - ПолеФормы - Поле
//  СтандартнаяОбработка - Булево - Стандартная обработка
&НаКлиенте
Процедура КомпоновщикНастроекНастройкиПараметрыДанныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначениеВыбраннойЯчейки(Элемент, ВыбраннаяСтрока, Поле);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Команда_ОткрытьФормуСписка(Команда)
	
	ОткрытьФормуСписка(Ложь);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура Команда_ОткрытьФормуСпискаСНастройками(Команда)
	
	ТекстВопроса = "Будет открыта форма списка с передачей текущих настроек.
	|Все настройки можно увидеть в 'Настроить список'.
	|При этом ограничения применяться не будут. 
	|Продолжить?";
	Ответ = Ждать ВопросАсинх(ТекстВопроса, РежимДиалогаВопрос.ДаНет); //КодВозвратаДиалога
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОткрытьФормуСписка(Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Показать значение выбранной ячейки.
// 
// Параметры:
//  Элемент - ТаблицаФормы - Элемент
//  ВыбраннаяСтрока - Число - Выбранная строка
//  Поле - ПолеФормы - Поле
&НаКлиенте
Процедура ПоказатьЗначениеВыбраннойЯчейки(Элемент, ВыбраннаяСтрока, Поле)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ИмяТаблицы = Элемент.Имя;
	ИмяКолонки = СтрЗаменить(Поле.Имя, ИмяТаблицы, "");
	
	Если ПустаяСтрока(ИмяКолонки) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущееЗначение = Неопределено;
	Если ТекущиеДанные.Свойство(ИмяКолонки, ТекущееЗначение) Тогда
		ПоказатьЗначение(, ТекущееЗначение);
	КонецЕсли;
	
КонецПроцедуры

// Открыть форму списка.
// 
// Параметры:
//  СПередачейНастроек - Булево - С передачей настроек
&НаКлиенте
Процедура ОткрытьФормуСписка(СПередачейНастроек)
	
	ПараметрыОткрытия = ПараметрыОткрытияФормыСписка(СПередачейНастроек);
	
	ОткрытьФорму(ПараметрыОткрытия.ИмяФормы, ПараметрыОткрытия.Параметры, ЭтотОбъект);
	
КонецПроцедуры

// Параметры открытия формы списка.
// 
// Параметры:
//  СПередачейНастроек - Булево - С передачей настроек
// 
// Возвращаемое значение:
//  Структура - Параметры открытия формы списка:
// * ИмяФормы - Строка - Имя формы
// * Параметры - Структура - Параметры открытия формы
&НаСервере
Функция ПараметрыОткрытияФормыСписка(СПередачейНастроек)
	
	ДанныеКлючаСписка = ИТМ_АдминистрированиеДинамическихСписковВызовСервера.ДанныеИзКлючаСписка(Запись.КлючСписка);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИмяФормы" , ДанныеКлючаСписка.ПолноеИмяФормы);
	ПараметрыОткрытия.Вставить("Параметры", Новый Структура);
	
	Если СПередачейНастроек Тогда
		
		ПараметрыОтладки = ИТМ_АдминистрированиеДинамическихСписковКлиентСервер.ШаблонПараметровОтладки();
		ПараметрыОтладки.РежимОткрытияНастроек = Истина;
		ПараметрыОтладки.Настройки = НастройкиИзЗаписи();
		
		Если ТипЗнч(ПараметрыОтладки.Настройки) <> Тип("НастройкиКомпоновкиДанных") Тогда
			ВызватьИсключение "В записи истории не содержатся настройки!";
		КонецЕсли;
		
		ПараметрыОтладки = Новый Структура(ДанныеКлючаСписка.ИмяЭлемента, ПараметрыОтладки);
		
		ПараметрыОткрытия.Параметры.Вставить(
			ИТМ_АдминистрированиеДинамическихСписковКлиентСервер.ИмяПараметровОтладкиНаФорме(), ПараметрыОтладки);
			
	КонецЕсли;
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

// Настройки из записи.
// 
// Возвращаемое значение:
//  НастройкиКомпоновкиДанных
&НаСервере
Функция НастройкиИзЗаписи()
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.ИТМ_ИсторияОбновленияДинамическихСписков;
	
	ЗначенияКлюча = Новый Структура();
	Для Каждого ОписаниеИзмерения Из МетаданныеРегистра.Измерения Цикл
		ЗначенияКлюча.Вставить(ОписаниеИзмерения.Имя);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ЗначенияКлюча, Запись.ИсходныйКлючЗаписи);
	
	ДанныеЗаписи = РегистрыСведений.ИТМ_ИсторияОбновленияДинамическихСписков.Получить(ЗначенияКлюча);
	
	Настройки = Неопределено; //ХранилищеЗначения
	ДанныеЗаписи.Свойство("Настройки", Настройки);
	
	Если ТипЗнч(Настройки) = Тип("ХранилищеЗначения") Тогда
		Возврат Настройки.Получить();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
