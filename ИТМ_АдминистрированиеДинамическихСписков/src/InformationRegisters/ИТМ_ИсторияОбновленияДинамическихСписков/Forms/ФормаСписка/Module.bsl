// @strict-types

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтборКлючСписка = Параметры.ОтборКлючСписка;
	ОбновитьОтборКлючаСписка();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОбновитьОтборКлючаСписка();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборКлючСпискаПриИзменении(Элемент)
	
	ОбновитьОтборКлючаСписка();

КонецПроцедуры

&НаКлиенте
Процедура ОтборКлючСпискаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = ИТМ_АдминистрированиеДинамическихСписковКлиент.ПараметрыОткрытияФормыВыбораКлючаСписка();
	ПараметрыОткрытия.Отбор.ЕстьНастройка  = Истина;
	ПараметрыОткрытия.ТолькоПросмотр = Истина;
	ПараметрыОткрытия.Владелец = Элемент;
	
	ИТМ_АдминистрированиеДинамическихСписковКлиент.ОткрытьФормуВыбораКлючаСписка(ПараметрыОткрытия);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьОтборКлючаСписка()

	ПараметрКлючСписка = Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КлючСписка"));
	
	Если ПараметрКлючСписка <> Неопределено Тогда
		
		НовыеСвойства = Новый Структура;
		НовыеСвойства.Вставить("Значение"     , ОтборКлючСписка);
		НовыеСвойства.Вставить("Использование", ЗначениеЗаполнено(НовыеСвойства.Значение));
		
		Для Каждого КлючИЗначение Из НовыеСвойства Цикл
			Если ПараметрКлючСписка[КлючИЗначение.Ключ] <> КлючИЗначение.Значение Тогда
				ПараметрКлючСписка[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
