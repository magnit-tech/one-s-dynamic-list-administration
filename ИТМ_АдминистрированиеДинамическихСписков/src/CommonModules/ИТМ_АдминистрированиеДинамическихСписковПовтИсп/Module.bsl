// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает массив полей таблицы, которые входят в состав одного из индексов
//
// Параметры:
//  ПолноеИмяМетаданных			 - Строка - Полное имя таблицы. Например, "Справочник.Валюты"
//  ПриводитьКВерхнемуРегистру	 - Булево - Нужно ли приводить имена полей к верхнему регистру
// 
// Возвращаемое значение:
//  ФиксированныйМассив из Строка - индексируемые поля
//
Функция ИндексируемыеПоляМетаданных(ПолноеИмяМетаданных, ПриводитьКВерхнемуРегистру = Истина) Экспорт
	
	ОбъектМетаданных  = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданных);
	Если ОбъектМетаданных = Неопределено Тогда
		Возврат Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли;
	
	ИндексируемыеПоля = Новый Массив;
	ИскомыеОбъекты    = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОбъектМетаданных);
	СтруктураХранения = ПолучитьСтруктуруХраненияБазыДанных(ИскомыеОбъекты);
	ТекущаяСтруктура  = СтруктураХранения.НайтиСтроки(Новый Структура("Назначение", "Основная"));
	
	Для Каждого ОписаниеТаблицы Из ТекущаяСтруктура Цикл
		//@skip-check property-return-type, variable-value-type - Баг ЕДТ
		Для Каждого ОписаниеИндекса Из ОписаниеТаблицы.Индексы Цикл
			//@skip-check property-return-type - баг ЕДТ
			Для Каждого ОписаниеПоля Из ОписаниеИндекса.Поля Цикл
				//@skip-check invocation-parameter-type-intersect - баг ЕДТ
				ИндексируемыеПоляМетаданных_ДобавитьВМассив(ОписаниеПоля, ПриводитьКВерхнемуРегистру, ИндексируемыеПоля);				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Новый ФиксированныйМассив(ИндексируемыеПоля);
	
КонецФункции

// Функция возвращает текущего пользователя
// 
// Возвращаемое значение:
//  СправочникСсылка.Пользователи, Строка - Пользователь или его имя
//
Функция ТекущийПользователь() Экспорт
	
	Попытка
		ТекущийПользователь = Пользователи.ТекущийПользователь();
	Исключение
		ТекущийПользователь = Неопределено;
	КонецПопытки;
	
	Если НЕ ЗначениеЗаполнено(ТекущийПользователь) Тогда
		ТекущийПользователь = ПользователиИнформационнойБазы.ТекущийПользователь().ПолноеИмя;
	КонецЕсли;
	
	Возврат ТекущийПользователь;
	
КонецФункции
	
// Функция возвращает ключевую операцию по полному имени ключа
//
// Параметры:
//  ИмяКлючевойОперации	 - Строка, СправочникСсылка.КлючевыеОперации - Полное имя ключа
// 
// Возвращаемое значение:
//  СправочникСсылка.КлючевыеОперации - Ключевая операция
//
Функция ПолучитьКлючевуюОперацию(ИмяКлючевойОперации) Экспорт
	
	Если ТипЗнч(ИмяКлючевойОперации) = Тип("СправочникСсылка.КлючевыеОперации") Тогда
		Возврат ИмяКлючевойОперации;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КлючевыеОперации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлючевыеОперации КАК КлючевыеОперации
	|ГДЕ
	|	КлючевыеОперации.ИмяХеш = &ИмяХеш
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ХешMD5 = Новый ХешированиеДанных(ХешФункция.MD5);
	ХешMD5.Добавить(ИмяКлючевойОперации);
	ИмяХеш = СтрЗаменить(Строка(ХешMD5.ХешСумма), " ", "");			   
					   
	Запрос.УстановитьПараметр("ИмяХеш", ИмяХеш);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		
		КлючеваяОперацияСсылка = ОценкаПроизводительности.СоздатьКлючевуюОперацию(ИмяКлючевойОперации, 1, Ложь);
		ИТМ_АдминистрированиеДинамическихСписков.НормализоватьНаименованияКлючевойОперации(КлючеваяОперацияСсылка);
		
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		КлючеваяОперацияСсылка = Выборка.Получить(0); //СправочникСсылка.КлючевыеОперации
		
	КонецЕсли;
	
	Возврат КлючеваяОперацияСсылка;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Индексируемые поля метаданных добавить в массив.
// 
// Параметры:
//  ОписаниеПоля - СтрокаТаблицыЗначений:
//  * ИмяПоля - Строка
//  ПриводитьКВерхнемуРегистру - Булево - Приводить к верхнему регистру
//  ИндексируемыеПоля - Массив из Строка - Индексируемые поля
Процедура ИндексируемыеПоляМетаданных_ДобавитьВМассив(ОписаниеПоля, ПриводитьКВерхнемуРегистру, ИндексируемыеПоля)

	ИмяПоля = ОписаниеПоля.ИмяПоля;
	Если ЗначениеЗаполнено(ИмяПоля) Тогда
		
		Если ПриводитьКВерхнемуРегистру Тогда
			ИмяПоля = ВРег(ИмяПоля);
		КонецЕсли;
		
		ИТМ_АдминистрированиеДинамическихСписковКлиентСервер.ДобавитьВМассивСПроверкой(ИндексируемыеПоля, ИмяПоля);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
